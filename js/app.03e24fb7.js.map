{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/app/planet/app.planet.blog/module/types/blog/sentPost.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/app/planet/app.planet.blog/module/types/blog/post.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/app/planet/app.planet.blog/module/types/blog/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?0db5","webpack:///./src/App.vue?eabf","webpack:///./src/store/generated/app/planet/app.planet.blog/module/rest.js","webpack:///./src/store/generated/app/planet/app.planet.blog/module/index.js","webpack:///./src/store/generated/app/planet/app.planet.blog/module/types/blog/packet.js","webpack:///./src/store/generated/app/planet/app.planet.blog/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?4e3d","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?79a6","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/App.vue?deda","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/app/planet/app.planet.blog/module/types/blog/timedoutPost.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseSentPost","creator","id","postID","title","chain","SentPost","string","uint64","String","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","PublicKey","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","fromCharCode","join","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","basePost","content","Post","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","time","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","baseMsgCreateTimedoutPost","MsgCreateTimedoutPost","baseMsgUpdateTimedoutPost","MsgUpdateTimedoutPost","baseMsgDeleteTimedoutPost","MsgDeleteTimedoutPost","baseMsgCreateSentPost","MsgCreateSentPost","baseMsgUpdateSentPost","MsgUpdateSentPost","baseMsgDeleteSentPost","MsgDeleteSentPost","baseMsgCreatePost","MsgCreatePost","baseMsgUpdatePost","MsgUpdatePost","baseMsgDeletePost","MsgDeletePost","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","state","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","description","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","JSON","stringify","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","delete","request","body","secure","path","query","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","assign","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryPostAll","method","queryPost","querySentPostAll","querySentPost","queryTimedoutPostAll","queryTimedoutPost","types","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgDeleteSentPost","msgCreateTimedoutPost","msgDeleteTimedoutPost","msgUpdatePost","msgUpdateTimedoutPost","msgCreatePost","msgCreateSentPost","msgDeletePost","msgUpdateSentPost","queryClient","baseBlogPacketData","BlogPacketData","noData","NoData","baseNoData","_","initTxClient","vuexGetters","initQueryClient","getStructure","template","structure","fields","field","getDefaultState","TimedoutPost","TimedoutPostAll","SentPostAll","PostAll","_Structure","_Subscriptions","Set","namespaced","mutations","RESET_STATE","QUERY","SUBSCRIBE","subscription","add","UNSUBSCRIBE","getters","getTimedoutPost","getTimedoutPostAll","getSentPost","getSentPostAll","getPost","getPostAll","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","QueryTimedoutPost","options","subscribe","all","SpVuexError","QueryTimedoutPostAll","pagination","nextKey","next_values","prop","QuerySentPost","QuerySentPostAll","QueryPost","QueryPostAll","sendMsgDeleteSentPost","msg","sendMsgCreateTimedoutPost","sendMsgDeleteTimedoutPost","sendMsgUpdatePost","sendMsgUpdateTimedoutPost","sendMsgCreatePost","sendMsgCreateSentPost","sendMsgDeletePost","sendMsgUpdateSentPost","queryAllBalances","queryBalance","denom","queryDenomsMetadata","queryDenomMetadata","queryParams","queryTotalSupply","querySupplyOf","baseCoin","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgMultiSend","msgSend","baseBalance","Balance","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getParams","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryParams","QueryDenomMetadata","QueryDenomsMetadata","sendMsgMultiSend","sendMsgSend","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorValidators","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","depositor","MsgFundCommunityPool","msgFundCommunityPool","msgWithdrawValidatorCommission","msgWithdrawDelegatorReward","msgSetWithdrawAddress","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorValidators","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorValidators","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorValidators","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgFundCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgWithdrawDelegatorReward","sendMsgSetWithdrawAddress","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","validatorAddr","MsgUnjail","msgUnjail","SigningInfo","SigningInfos","ValidatorSigningInfo","ValidatorMissedBlocks","MissedBlock","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","V1Order","V1State","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenInit","MsgTimeout","MsgChannelOpenAck","MsgChannelCloseInit","MsgChannelCloseConfirm","MsgChannelOpenConfirm","MsgChannelOpenTry","MsgRecvPacket","MsgTimeoutOnClose","MsgAcknowledgement","msgChannelOpenInit","msgTimeout","msgChannelOpenAck","msgChannelCloseInit","msgChannelCloseConfirm","msgChannelOpenConfirm","msgChannelOpenTry","msgRecvPacket","msgTimeoutOnClose","msgAcknowledgement","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","revision_number","revision_height","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenInit","sendMsgTimeout","sendMsgChannelOpenAck","sendMsgChannelCloseInit","sendMsgChannelCloseConfirm","sendMsgChannelOpenConfirm","sendMsgChannelOpenTry","sendMsgRecvPacket","sendMsgTimeoutOnClose","sendMsgAcknowledgement","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenAck","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenTry","msgConnectionOpenAck","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenTry","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","client_id","QueryConnectionClientState","QueryConnectionConsensusState","sendMsgConnectionOpenAck","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenTry","queryAllEvidence","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","evidence_hash","QueryAllEvidence","sendMsgSubmitEvidence","MsgCreateVestingAccount","msgCreateVestingAccount","V1Beta1BondStatus","sendMsgCreateVestingAccount","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidator","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgDelegate","msgEditValidator","msgCreateValidator","msgUndelegate","msgBeginRedelegate","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgDelegate","sendMsgEditValidator","sendMsgCreateValidator","sendMsgUndelegate","sendMsgBeginRedelegate","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","V1Beta1ProposalStatus","V1Beta1VoteOption","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","queryTallyResult","queryVotes","queryVote","voter","MsgSubmitProposal","MsgDeposit","MsgVote","msgSubmitProposal","msgDeposit","msgVote","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgSubmitProposal","sendMsgDeposit","sendMsgVote","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpgradeClient","msgUpdateClient","msgCreateClient","msgSubmitMisbehaviour","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","QueryClientStates","QueryConsensusState","QueryConsensusStates","QueryClientParams","sendMsgUpgradeClient","sendMsgUpdateClient","sendMsgCreateClient","sendMsgSubmitMisbehaviour","AppPlanetAppPlanetBlog","load","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkIbcCoreConnectionV1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosVestingV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkIbcCoreClientV1","mod","fullns","store","fullnsLevels","split","registerModule","pop","mutation","root","values","generated","moduleInit","transfers","starport","blocks","env","createStore","modulePath","moduleType","routerHistory","createWebHistory","routes","component","Index","Types","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseTimedoutPost","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.03e24fb7.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"app.planet.blog\";\nconst baseSentPost = {\n    creator: \"\",\n    id: 0,\n    postID: \"\",\n    title: \"\",\n    chain: \"\",\n};\nexport const SentPost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.postID !== \"\") {\n            writer.uint32(26).string(message.postID);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(34).string(message.title);\n        }\n        if (message.chain !== \"\") {\n            writer.uint32(42).string(message.chain);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSentPost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.postID = reader.string();\n                    break;\n                case 4:\n                    message.title = reader.string();\n                    break;\n                case 5:\n                    message.chain = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSentPost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.postID !== undefined && object.postID !== null) {\n            message.postID = String(object.postID);\n        }\n        else {\n            message.postID = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = String(object.chain);\n        }\n        else {\n            message.chain = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.postID !== undefined && (obj.postID = message.postID);\n        message.title !== undefined && (obj.title = message.title);\n        message.chain !== undefined && (obj.chain = message.chain);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSentPost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.postID !== undefined && object.postID !== null) {\n            message.postID = object.postID;\n        }\n        else {\n            message.postID = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = object.chain;\n        }\n        else {\n            message.chain = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseMsgCreateClient = { signer: \"\" };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpdateClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpgradeClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviour = { clientId: \"\", signer: \"\" };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"CreateClient\", data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpdateClient\", data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpgradeClient\", data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"SubmitMisbehaviour\", data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { Header } from \"../../tendermint/types/types\";\nimport { ProofOps } from \"../../tendermint/crypto/proof\";\nimport { EvidenceParams, ValidatorParams, VersionParams, } from \"../../tendermint/types/params\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.abci\";\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NEW\":\n            return CheckTxType.NEW;\n        case 1:\n        case \"RECHECK\":\n            return CheckTxType.RECHECK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return \"NEW\";\n        case CheckTxType.RECHECK:\n            return \"RECHECK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case \"DUPLICATE_VOTE\":\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case \"LIGHT_CLIENT_ATTACK\":\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return \"UNKNOWN\";\n        case EvidenceType.DUPLICATE_VOTE:\n            return \"DUPLICATE_VOTE\";\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return \"LIGHT_CLIENT_ATTACK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case \"REJECT\":\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case \"REJECT_FORMAT\":\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case \"REJECT_SENDER\":\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseOfferSnapshot_Result.ABORT:\n            return \"ABORT\";\n        case ResponseOfferSnapshot_Result.REJECT:\n            return \"REJECT\";\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return \"REJECT_FORMAT\";\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return \"REJECT_SENDER\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case \"RETRY\":\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case \"RETRY_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case \"REJECT_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return \"ABORT\";\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return \"RETRY\";\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return \"RETRY_SNAPSHOT\";\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return \"REJECT_SNAPSHOT\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseRequestEcho = { message: \"\" };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n};\nconst baseRequestInfo = { version: \"\", blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== \"\") {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestSetOption = { key: \"\", value: \"\" };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestInitChain = { chainId: \"\", initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestQuery = { path: \"\", height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== \"\") {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: \"\" };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseResponseException = { error: \"\" };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== \"\") {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEcho = { message: \"\" };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n};\nconst baseResponseInfo = {\n    data: \"\",\n    version: \"\",\n    appVersion: 0,\n    lastBlockHeight: 0,\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== \"\") {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseSetOption = { code: 0, log: \"\", info: \"\" };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    index: 0,\n    height: 0,\n    codespace: \"\",\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: \"\",\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => e ? VoteInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEvent = { type: \"\" };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Echo\", data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Flush\", data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Info\", data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"SetOption\", data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"DeliverTx\", data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"CheckTx\", data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Query\", data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Commit\", data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"InitChain\", data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"BeginBlock\", data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"EndBlock\", data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ListSnapshots\", data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"OfferSnapshot\", data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"LoadSnapshotChunk\", data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ApplySnapshotChunk\", data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"app.planet.blog\";\nconst basePost = { creator: \"\", id: 0, title: \"\", content: \"\" };\nexport const Post = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(26).string(message.title);\n        }\n        if (message.content !== \"\") {\n            writer.uint32(34).string(message.content);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.title = reader.string();\n                    break;\n                case 4:\n                    message.content = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.title !== undefined && (obj.title = message.title);\n        message.content !== undefined && (obj.content = message.content);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../google/protobuf/duration\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorParams = { pubKeyTypes: \"\" };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined &&\n            (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: \"\" };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== \"\") {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { BaseAccount } from \"../../../cosmos/auth/v1beta1/auth\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nexport const protobufPackage = \"app.planet.blog\";\nconst baseMsgCreateTimedoutPost = { creator: \"\", title: \"\", chain: \"\" };\nexport const MsgCreateTimedoutPost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(18).string(message.title);\n        }\n        if (message.chain !== \"\") {\n            writer.uint32(26).string(message.chain);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateTimedoutPost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.title = reader.string();\n                    break;\n                case 3:\n                    message.chain = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateTimedoutPost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = String(object.chain);\n        }\n        else {\n            message.chain = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.title !== undefined && (obj.title = message.title);\n        message.chain !== undefined && (obj.chain = message.chain);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateTimedoutPost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = object.chain;\n        }\n        else {\n            message.chain = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateTimedoutPostResponse = { id: 0 };\nexport const MsgCreateTimedoutPostResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateTimedoutPostResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateTimedoutPostResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateTimedoutPostResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateTimedoutPost = {\n    creator: \"\",\n    id: 0,\n    title: \"\",\n    chain: \"\",\n};\nexport const MsgUpdateTimedoutPost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(26).string(message.title);\n        }\n        if (message.chain !== \"\") {\n            writer.uint32(34).string(message.chain);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateTimedoutPost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.title = reader.string();\n                    break;\n                case 4:\n                    message.chain = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateTimedoutPost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = String(object.chain);\n        }\n        else {\n            message.chain = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.title !== undefined && (obj.title = message.title);\n        message.chain !== undefined && (obj.chain = message.chain);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateTimedoutPost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = object.chain;\n        }\n        else {\n            message.chain = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateTimedoutPostResponse = {};\nexport const MsgUpdateTimedoutPostResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateTimedoutPostResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateTimedoutPostResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateTimedoutPostResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeleteTimedoutPost = { creator: \"\", id: 0 };\nexport const MsgDeleteTimedoutPost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteTimedoutPost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteTimedoutPost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteTimedoutPost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteTimedoutPostResponse = {};\nexport const MsgDeleteTimedoutPostResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeleteTimedoutPostResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeleteTimedoutPostResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeleteTimedoutPostResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreateSentPost = {\n    creator: \"\",\n    postID: \"\",\n    title: \"\",\n    chain: \"\",\n};\nexport const MsgCreateSentPost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.postID !== \"\") {\n            writer.uint32(18).string(message.postID);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(26).string(message.title);\n        }\n        if (message.chain !== \"\") {\n            writer.uint32(34).string(message.chain);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateSentPost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.postID = reader.string();\n                    break;\n                case 3:\n                    message.title = reader.string();\n                    break;\n                case 4:\n                    message.chain = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateSentPost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.postID !== undefined && object.postID !== null) {\n            message.postID = String(object.postID);\n        }\n        else {\n            message.postID = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = String(object.chain);\n        }\n        else {\n            message.chain = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.postID !== undefined && (obj.postID = message.postID);\n        message.title !== undefined && (obj.title = message.title);\n        message.chain !== undefined && (obj.chain = message.chain);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateSentPost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.postID !== undefined && object.postID !== null) {\n            message.postID = object.postID;\n        }\n        else {\n            message.postID = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = object.chain;\n        }\n        else {\n            message.chain = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateSentPostResponse = { id: 0 };\nexport const MsgCreateSentPostResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateSentPostResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateSentPostResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateSentPostResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateSentPost = {\n    creator: \"\",\n    id: 0,\n    postID: \"\",\n    title: \"\",\n    chain: \"\",\n};\nexport const MsgUpdateSentPost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.postID !== \"\") {\n            writer.uint32(26).string(message.postID);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(34).string(message.title);\n        }\n        if (message.chain !== \"\") {\n            writer.uint32(42).string(message.chain);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateSentPost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.postID = reader.string();\n                    break;\n                case 4:\n                    message.title = reader.string();\n                    break;\n                case 5:\n                    message.chain = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateSentPost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.postID !== undefined && object.postID !== null) {\n            message.postID = String(object.postID);\n        }\n        else {\n            message.postID = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = String(object.chain);\n        }\n        else {\n            message.chain = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.postID !== undefined && (obj.postID = message.postID);\n        message.title !== undefined && (obj.title = message.title);\n        message.chain !== undefined && (obj.chain = message.chain);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateSentPost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.postID !== undefined && object.postID !== null) {\n            message.postID = object.postID;\n        }\n        else {\n            message.postID = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = object.chain;\n        }\n        else {\n            message.chain = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateSentPostResponse = {};\nexport const MsgUpdateSentPostResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateSentPostResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateSentPostResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateSentPostResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeleteSentPost = { creator: \"\", id: 0 };\nexport const MsgDeleteSentPost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteSentPost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteSentPost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteSentPost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteSentPostResponse = {};\nexport const MsgDeleteSentPostResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeleteSentPostResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeleteSentPostResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeleteSentPostResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgCreatePost = { creator: \"\", title: \"\", content: \"\" };\nexport const MsgCreatePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(18).string(message.title);\n        }\n        if (message.content !== \"\") {\n            writer.uint32(26).string(message.content);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.title = reader.string();\n                    break;\n                case 3:\n                    message.content = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.title !== undefined && (obj.title = message.title);\n        message.content !== undefined && (obj.content = message.content);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreatePostResponse = { id: 0 };\nexport const MsgCreatePostResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreatePostResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreatePostResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreatePostResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePost = {\n    creator: \"\",\n    id: 0,\n    title: \"\",\n    content: \"\",\n};\nexport const MsgUpdatePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(26).string(message.title);\n        }\n        if (message.content !== \"\") {\n            writer.uint32(34).string(message.content);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdatePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.title = reader.string();\n                    break;\n                case 4:\n                    message.content = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = String(object.content);\n        }\n        else {\n            message.content = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.title !== undefined && (obj.title = message.title);\n        message.content !== undefined && (obj.content = message.content);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdatePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = object.content;\n        }\n        else {\n            message.content = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePostResponse = {};\nexport const MsgUpdatePostResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdatePostResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdatePostResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdatePostResponse };\n        return message;\n    },\n};\nconst baseMsgDeletePost = { creator: \"\", id: 0 };\nexport const MsgDeletePost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeletePost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeletePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeletePost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeletePostResponse = {};\nexport const MsgDeletePostResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeletePostResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeletePostResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeletePostResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateTimedoutPost(request) {\n        const data = MsgCreateTimedoutPost.encode(request).finish();\n        const promise = this.rpc.request(\"app.planet.blog.Msg\", \"CreateTimedoutPost\", data);\n        return promise.then((data) => MsgCreateTimedoutPostResponse.decode(new Reader(data)));\n    }\n    UpdateTimedoutPost(request) {\n        const data = MsgUpdateTimedoutPost.encode(request).finish();\n        const promise = this.rpc.request(\"app.planet.blog.Msg\", \"UpdateTimedoutPost\", data);\n        return promise.then((data) => MsgUpdateTimedoutPostResponse.decode(new Reader(data)));\n    }\n    DeleteTimedoutPost(request) {\n        const data = MsgDeleteTimedoutPost.encode(request).finish();\n        const promise = this.rpc.request(\"app.planet.blog.Msg\", \"DeleteTimedoutPost\", data);\n        return promise.then((data) => MsgDeleteTimedoutPostResponse.decode(new Reader(data)));\n    }\n    CreateSentPost(request) {\n        const data = MsgCreateSentPost.encode(request).finish();\n        const promise = this.rpc.request(\"app.planet.blog.Msg\", \"CreateSentPost\", data);\n        return promise.then((data) => MsgCreateSentPostResponse.decode(new Reader(data)));\n    }\n    UpdateSentPost(request) {\n        const data = MsgUpdateSentPost.encode(request).finish();\n        const promise = this.rpc.request(\"app.planet.blog.Msg\", \"UpdateSentPost\", data);\n        return promise.then((data) => MsgUpdateSentPostResponse.decode(new Reader(data)));\n    }\n    DeleteSentPost(request) {\n        const data = MsgDeleteSentPost.encode(request).finish();\n        const promise = this.rpc.request(\"app.planet.blog.Msg\", \"DeleteSentPost\", data);\n        return promise.then((data) => MsgDeleteSentPostResponse.decode(new Reader(data)));\n    }\n    CreatePost(request) {\n        const data = MsgCreatePost.encode(request).finish();\n        const promise = this.rpc.request(\"app.planet.blog.Msg\", \"CreatePost\", data);\n        return promise.then((data) => MsgCreatePostResponse.decode(new Reader(data)));\n    }\n    UpdatePost(request) {\n        const data = MsgUpdatePost.encode(request).finish();\n        const promise = this.rpc.request(\"app.planet.blog.Msg\", \"UpdatePost\", data);\n        return promise.then((data) => MsgUpdatePostResponse.decode(new Reader(data)));\n    }\n    DeletePost(request) {\n        const data = MsgDeletePost.encode(request).finish();\n        const promise = this.rpc.request(\"app.planet.blog.Msg\", \"DeletePost\", data);\n        return promise.then((data) => MsgDeletePostResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case 4:\n        case \"STATE_CLOSED\":\n            return State.STATE_CLOSED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        case State.STATE_CLOSED:\n            return \"STATE_CLOSED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"ORDER_NONE_UNSPECIFIED\":\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case \"ORDER_UNORDERED\":\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case \"ORDER_ORDERED\":\n            return Order.ORDER_ORDERED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return \"ORDER_NONE_UNSPECIFIED\";\n        case Order.ORDER_UNORDERED:\n            return \"ORDER_UNORDERED\";\n        case Order.ORDER_ORDERED:\n            return \"ORDER_ORDERED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n    portId: \"\",\n    channelId: \"\",\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== \"\") {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { portId: \"\", channelId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    destinationPort: \"\",\n    destinationChannel: \"\",\n    timeoutTimestamp: 0,\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== \"\") {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== \"\") {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== \"\") {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst basePacketState = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Header } from \"../../../tendermint/types/types\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BOND_STATUS_UNSPECIFIED\":\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case \"BOND_STATUS_UNBONDED\":\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case \"BOND_STATUS_UNBONDING\":\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case \"BOND_STATUS_BONDED\":\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return \"BOND_STATUS_UNSPECIFIED\";\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return \"BOND_STATUS_UNBONDED\";\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return \"BOND_STATUS_UNBONDING\";\n        case BondStatus.BOND_STATUS_BONDED:\n            return \"BOND_STATUS_BONDED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommissionRates = {\n    rate: \"\",\n    maxRate: \"\",\n    maxChangeRate: \"\",\n};\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== \"\") {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== \"\") {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== \"\") {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseDescription = {\n    moniker: \"\",\n    identity: \"\",\n    website: \"\",\n    securityContact: \"\",\n    details: \"\",\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== \"\") {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== \"\") {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== \"\") {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== \"\") {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== \"\") {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidator = {\n    operatorAddress: \"\",\n    jailed: false,\n    status: 0,\n    tokens: \"\",\n    delegatorShares: \"\",\n    unbondingHeight: 0,\n    minSelfDelegation: \"\",\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== \"\") {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== \"\") {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== \"\") {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseValAddresses = { addresses: \"\" };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseDVPair = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDVVTriplet = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n    shares: \"\",\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== \"\") {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    balance: \"\",\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    sharesDst: \"\",\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== \"\") {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegation = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: \"\",\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== \"\") {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance\n                ? Coin.toJSON(message.balance)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntryResponse = { balance: \"\" };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePool = { notBondedTokens: \"\", bondedTokens: \"\" };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== \"\") {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== \"\") {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n  <SpSidebar\n\t\t\t\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\t\t\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t\t\t\t>\n\t\t\t\t\t<template v-slot:default>\n\t\t\t\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t\t\t\t<SpLinkIcon href=\"https://github.com/tendermint/starport\" target=\"_blank\" text=\"Documentation\" icon=\"Docs\" />\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-slot:footer>\n\t\t\t\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t\t\t\t</template>\n\t\t\t\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n  name: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=21017ee9\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=5695b462\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title blog/genesis.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPostAll\n         * @request GET:/app/planet/blog/post\n         */\n        this.queryPostAll = (query, params = {}) => this.request({\n            path: `/app/planet/blog/post`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPost\n         * @request GET:/app/planet/blog/post/{id}\n         */\n        this.queryPost = (id, params = {}) => this.request({\n            path: `/app/planet/blog/post/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySentPostAll\n         * @request GET:/app/planet/blog/sentPost\n         */\n        this.querySentPostAll = (query, params = {}) => this.request({\n            path: `/app/planet/blog/sentPost`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySentPost\n         * @request GET:/app/planet/blog/sentPost/{id}\n         */\n        this.querySentPost = (id, params = {}) => this.request({\n            path: `/app/planet/blog/sentPost/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTimedoutPostAll\n         * @request GET:/app/planet/blog/timedoutPost\n         */\n        this.queryTimedoutPostAll = (query, params = {}) => this.request({\n            path: `/app/planet/blog/timedoutPost`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTimedoutPost\n         * @summary this line is used by starport scaffolding # 2\n         * @request GET:/app/planet/blog/timedoutPost/{id}\n         */\n        this.queryTimedoutPost = (id, params = {}) => this.request({\n            path: `/app/planet/blog/timedoutPost/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgDeleteSentPost } from \"./types/blog/tx\";\nimport { MsgCreateTimedoutPost } from \"./types/blog/tx\";\nimport { MsgDeleteTimedoutPost } from \"./types/blog/tx\";\nimport { MsgUpdatePost } from \"./types/blog/tx\";\nimport { MsgUpdateTimedoutPost } from \"./types/blog/tx\";\nimport { MsgCreatePost } from \"./types/blog/tx\";\nimport { MsgCreateSentPost } from \"./types/blog/tx\";\nimport { MsgDeletePost } from \"./types/blog/tx\";\nimport { MsgUpdateSentPost } from \"./types/blog/tx\";\nconst types = [\n    [\"/app.planet.blog.MsgDeleteSentPost\", MsgDeleteSentPost],\n    [\"/app.planet.blog.MsgCreateTimedoutPost\", MsgCreateTimedoutPost],\n    [\"/app.planet.blog.MsgDeleteTimedoutPost\", MsgDeleteTimedoutPost],\n    [\"/app.planet.blog.MsgUpdatePost\", MsgUpdatePost],\n    [\"/app.planet.blog.MsgUpdateTimedoutPost\", MsgUpdateTimedoutPost],\n    [\"/app.planet.blog.MsgCreatePost\", MsgCreatePost],\n    [\"/app.planet.blog.MsgCreateSentPost\", MsgCreateSentPost],\n    [\"/app.planet.blog.MsgDeletePost\", MsgDeletePost],\n    [\"/app.planet.blog.MsgUpdateSentPost\", MsgUpdateSentPost],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgDeleteSentPost: (data) => ({ typeUrl: \"/app.planet.blog.MsgDeleteSentPost\", value: data }),\n        msgCreateTimedoutPost: (data) => ({ typeUrl: \"/app.planet.blog.MsgCreateTimedoutPost\", value: data }),\n        msgDeleteTimedoutPost: (data) => ({ typeUrl: \"/app.planet.blog.MsgDeleteTimedoutPost\", value: data }),\n        msgUpdatePost: (data) => ({ typeUrl: \"/app.planet.blog.MsgUpdatePost\", value: data }),\n        msgUpdateTimedoutPost: (data) => ({ typeUrl: \"/app.planet.blog.MsgUpdateTimedoutPost\", value: data }),\n        msgCreatePost: (data) => ({ typeUrl: \"/app.planet.blog.MsgCreatePost\", value: data }),\n        msgCreateSentPost: (data) => ({ typeUrl: \"/app.planet.blog.MsgCreateSentPost\", value: data }),\n        msgDeletePost: (data) => ({ typeUrl: \"/app.planet.blog.MsgDeletePost\", value: data }),\n        msgUpdateSentPost: (data) => ({ typeUrl: \"/app.planet.blog.MsgUpdateSentPost\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"app.planet.blog\";\nconst baseBlogPacketData = {};\nexport const BlogPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.noData !== undefined) {\n            NoData.encode(message.noData, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlogPacketData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.noData = NoData.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlogPacketData };\n        if (object.noData !== undefined && object.noData !== null) {\n            message.noData = NoData.fromJSON(object.noData);\n        }\n        else {\n            message.noData = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.noData !== undefined &&\n            (obj.noData = message.noData ? NoData.toJSON(message.noData) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlogPacketData };\n        if (object.noData !== undefined && object.noData !== null) {\n            message.noData = NoData.fromPartial(object.noData);\n        }\n        else {\n            message.noData = undefined;\n        }\n        return message;\n    },\n};\nconst baseNoData = {};\nexport const NoData = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNoData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseNoData };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseNoData };\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BlogPacketData } from \"./module/types/blog/packet\";\nimport { NoData } from \"./module/types/blog/packet\";\nimport { SentPost } from \"./module/types/blog/sentPost\";\nimport { Post } from \"./module/types/blog/post\";\nimport { TimedoutPost } from \"./module/types/blog/timedoutPost\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        TimedoutPost: {},\n        TimedoutPostAll: {},\n        SentPost: {},\n        SentPostAll: {},\n        Post: {},\n        PostAll: {},\n        _Structure: {\n            BlogPacketData: getStructure(BlogPacketData.fromPartial({})),\n            NoData: getStructure(NoData.fromPartial({})),\n            SentPost: getStructure(SentPost.fromPartial({})),\n            Post: getStructure(Post.fromPartial({})),\n            TimedoutPost: getStructure(TimedoutPost.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTimedoutPost: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TimedoutPost[JSON.stringify(params)] ?? {};\n        },\n        getTimedoutPostAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TimedoutPostAll[JSON.stringify(params)] ?? {};\n        },\n        getSentPost: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SentPost[JSON.stringify(params)] ?? {};\n        },\n        getSentPostAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SentPostAll[JSON.stringify(params)] ?? {};\n        },\n        getPost: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Post[JSON.stringify(params)] ?? {};\n        },\n        getPostAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PostAll[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryTimedoutPost({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTimedoutPost(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryTimedoutPost(key.id)).data;\n                commit('QUERY', { query: 'TimedoutPost', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTimedoutPost', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTimedoutPost']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTimedoutPost', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTimedoutPostAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTimedoutPostAll(query)).data : (await (await initQueryClient(rootGetters)).queryTimedoutPostAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryTimedoutPostAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'TimedoutPostAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTimedoutPostAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTimedoutPostAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTimedoutPostAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySentPost({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySentPost(key.id, query)).data : (await (await initQueryClient(rootGetters)).querySentPost(key.id)).data;\n                commit('QUERY', { query: 'SentPost', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySentPost', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSentPost']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySentPost', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySentPostAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySentPostAll(query)).data : (await (await initQueryClient(rootGetters)).querySentPostAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).querySentPostAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'SentPostAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySentPostAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSentPostAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySentPostAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPost({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPost(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryPost(key.id)).data;\n                commit('QUERY', { query: 'Post', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPost', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPost']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPost', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPostAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPostAll(query)).data : (await (await initQueryClient(rootGetters)).queryPostAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPostAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PostAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPostAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPostAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPostAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgDeleteSentPost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteSentPost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteSentPost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteSentPost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateTimedoutPost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateTimedoutPost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateTimedoutPost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateTimedoutPost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteTimedoutPost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteTimedoutPost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteTimedoutPost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteTimedoutPost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdatePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateTimedoutPost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateTimedoutPost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateTimedoutPost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateTimedoutPost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreatePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateSentPost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateSentPost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateSentPost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateSentPost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeletePost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateSentPost({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateSentPost(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateSentPost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateSentPost:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgDeleteSentPost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteSentPost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteSentPost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteSentPost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateTimedoutPost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateTimedoutPost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateTimedoutPost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateTimedoutPost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteTimedoutPost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteTimedoutPost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteTimedoutPost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteTimedoutPost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdatePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdatePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdatePost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateTimedoutPost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateTimedoutPost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateTimedoutPost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateTimedoutPost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreatePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreatePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreatePost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateSentPost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateSentPost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateSentPost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateSentPost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeletePost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeletePost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeletePost:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateSentPost({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateSentPost(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateSentPost:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateSentPost:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseSendEnabled = { denom: \"\", enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n};\nconst baseInput = { address: \"\" };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseOutput = { address: \"\" };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDenomUnit = { denom: \"\", exponent: 0, aliases: \"\" };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMetadata = { description: \"\", base: \"\", display: \"\" };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== \"\") {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== \"\") {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== \"\") {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Input, Output } from \"../../../cosmos/bank/v1beta1/bank\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseMsgSend = { fromAddress: \"\", toAddress: \"\" };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"Send\", data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"MultiSend\", data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from \"../../../cosmos/bank/v1beta1/bank\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBalance = { address: \"\" };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, query)).data : (await (await initQueryClient(rootGetters)).queryAllBalances(key.address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTotalSupply(query)).data : (await (await initQueryClient(rootGetters)).queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom, query)).data : (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomsMetadata(query)).data : (await (await initQueryClient(rootGetters)).queryDenomsMetadata()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash, query)).data : (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTraces(query)).data : (await (await initQueryClient(rootGetters)).queryDenomTraces()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: \"\" };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgFundCommunityPool = { depositor: \"\" };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"SetWithdrawAddress\", data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawDelegatorReward\", data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawValidatorCommission\", data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"FundCommunityPool\", data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryCommunityPool(query)).data : (await (await initQueryClient(rootGetters)).queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/slashing.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseMsgUnjail = { validatorAddr: \"\" };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.slashing.v1beta1.Msg\", \"Unjail\", data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address, query)).data : (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfos(query)).data : (await (await initQueryClient(rootGetters)).querySigningInfos()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannels(query)).data : (await (await initQueryClient(rootGetters)).queryChannels()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnections(query)).data : (await (await initQueryClient(rootGetters)).queryConnections()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash, query)).data : (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllEvidence(query)).data : (await (await initQueryClient(rootGetters)).queryAllEvidence()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/vesting.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/staking.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport { Description, CommissionRates, } from \"../../../cosmos/staking/v1beta1/staking\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseMsgCreateValidator = {\n    minSelfDelegation: \"\",\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgEditValidator = {\n    validatorAddress: \"\",\n    commissionRate: \"\",\n    minSelfDelegation: \"\",\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== \"\") {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDelegate = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegate = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"CreateValidator\", data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"EditValidator\", data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Delegate\", data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"BeginRedelegate\", data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Undelegate\", data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidators(query)).data : (await (await initQueryClient(rootGetters)).queryValidators()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height, query)).data : (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool(query)).data : (await (await initQueryClient(rootGetters)).queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/gov.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposals(query)).data : (await (await initQueryClient(rootGetters)).queryProposals()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter, query)).data : (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(key.params_type, query)).data : (await (await initQueryClient(rootGetters)).queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor, query)).data : (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.crisis.v1beta1\";\nconst baseMsgVerifyInvariant = {\n    sender: \"\",\n    invariantModuleName: \"\",\n    invariantRoute: \"\",\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== \"\") {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== \"\") {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.crisis.v1beta1.Msg\", \"VerifyInvariant\", data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientState(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientStates(query)).data : (await (await initQueryClient(rootGetters)).queryClientStates()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientParams(query)).data : (await (await initQueryClient(rootGetters)).queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport AppPlanetAppPlanetBlog from './app/planet/app.planet.blog';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nexport default {\n    AppPlanetAppPlanetBlog: load(AppPlanetAppPlanetBlog, 'app.planet.blog'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        const fullnsLevels = fullns.split('/');\n        for (let i = 1; i < fullnsLevels.length; i++) {\n            let ns = fullnsLevels.slice(0, i);\n            if (!store.hasModule(ns)) {\n                store.registerModule(ns, { namespaced: true });\n            }\n        }\n        if (store.hasModule(fullnsLevels)) {\n            throw new Error('Duplicate module name detected: ' + fullnsLevels.pop());\n        }\n        else {\n            store.registerModule(fullnsLevels, mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, starport, blocks, wallet,transfers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tstarport(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {},\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=e30ba36a\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \t<!-- this line is used by starport scaffolding # 4 -->\n\t\t<SpType modulePath=\"app.planet.blog\" moduleType=\"TimedoutPost\"  />\n\t\t<SpType modulePath=\"app.planet.blog\" moduleType=\"SentPost\"  />\n\t\t<SpType modulePath=\"app.planet.blog\" moduleType=\"Post\"  />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n\n","import { render } from \"./Types.vue?vue&type=template&id=259a70e2\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedChannel, PacketState, } from \"../../../../ibc/core/channel/v1/channel\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n};\nconst basePacketSequence = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, ValidatorSigningInfo, } from \"../../../cosmos/slashing/v1beta1/slashing\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSigningInfo = { address: \"\" };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorMissedBlocks = { address: \"\" };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { MerklePrefix } from \"../../../../ibc/core/commitment/v1/commitment\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseConnectionEnd = { clientId: \"\", state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseIdentifiedConnection = {\n    id: \"\",\n    clientId: \"\",\n    state: 0,\n    delayPeriod: 0,\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { clientId: \"\", connectionId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== \"\") {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientPaths = { paths: \"\" };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConnectionPaths = { clientId: \"\", paths: \"\" };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersion = { identifier: \"\", features: \"\" };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== \"\") {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin, Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseParams = {\n    communityTax: \"\",\n    baseProposerReward: \"\",\n    bonusProposerReward: \"\",\n    withdrawAddrEnabled: false,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== \"\") {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== \"\") {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== \"\") {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: \"\" };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== \"\") {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposal = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: \"\",\n    height: 0,\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== \"\") {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseDelegationDelegatorReward = { validatorAddress: \"\" };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n    amount: \"\",\n    deposit: \"\",\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== \"\") {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseValidatorSigningInfo = {\n    address: \"\",\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0,\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined &&\n            (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined &&\n            (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"app.planet.blog\";\nconst baseTimedoutPost = { creator: \"\", id: 0, title: \"\", chain: \"\" };\nexport const TimedoutPost = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.title !== \"\") {\n            writer.uint32(26).string(message.title);\n        }\n        if (message.chain !== \"\") {\n            writer.uint32(34).string(message.chain);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimedoutPost };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.title = reader.string();\n                    break;\n                case 4:\n                    message.chain = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimedoutPost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = String(object.chain);\n        }\n        else {\n            message.chain = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.title !== undefined && (obj.title = message.title);\n        message.chain !== undefined && (obj.chain = message.chain);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimedoutPost };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.chain !== undefined && object.chain !== null) {\n            message.chain = object.chain;\n        }\n        else {\n            message.chain = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseMsgSubmitEvidence = { submitter: \"\" };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== \"\") {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.evidence.v1beta1.Msg\", \"SubmitEvidence\", data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool, } from \"../../../cosmos/distribution/v1beta1/distribution\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: \"\",\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: \"\",\n    period: 0,\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: \"\",\n    height: 0,\n    period: 0,\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n};\nconst baseGenesisState = { previousProposer: \"\" };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== \"\") {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseMsgCreateVestingAccount = {\n    fromAddress: \"\",\n    toAddress: \"\",\n    endTime: 0,\n    delayed: false,\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.vesting.v1beta1.Msg\", \"CreateVestingAccount\", data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Channel, Packet } from \"../../../../ibc/core/channel/v1/channel\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseMsgChannelOpenInit = { portId: \"\", signer: \"\" };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenTry = {\n    portId: \"\",\n    previousChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== \"\") {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenAck = {\n    portId: \"\",\n    channelId: \"\",\n    counterpartyChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== \"\") {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseInit = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgRecvPacket = { signer: \"\" };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgAcknowledgement = { signer: \"\" };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenInit\", data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenTry\", data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenAck\", data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenConfirm\", data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseInit\", data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseConfirm\", data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"RecvPacket\", data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Timeout\", data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"TimeoutOnClose\", data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Acknowledgement\", data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.auth.v1beta1\";\nconst baseBaseAccount = { address: \"\", accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nconst baseModuleAccount = { name: \"\", permissions: \"\" };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"VOTE_OPTION_UNSPECIFIED\":\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case \"VOTE_OPTION_YES\":\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case \"VOTE_OPTION_ABSTAIN\":\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case \"VOTE_OPTION_NO\":\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case \"VOTE_OPTION_NO_WITH_VETO\":\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return \"VOTE_OPTION_UNSPECIFIED\";\n        case VoteOption.VOTE_OPTION_YES:\n            return \"VOTE_OPTION_YES\";\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return \"VOTE_OPTION_ABSTAIN\";\n        case VoteOption.VOTE_OPTION_NO:\n            return \"VOTE_OPTION_NO\";\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return \"VOTE_OPTION_NO_WITH_VETO\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"PROPOSAL_STATUS_UNSPECIFIED\":\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case \"PROPOSAL_STATUS_DEPOSIT_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case \"PROPOSAL_STATUS_VOTING_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case \"PROPOSAL_STATUS_PASSED\":\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case \"PROPOSAL_STATUS_REJECTED\":\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case \"PROPOSAL_STATUS_FAILED\":\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return \"PROPOSAL_STATUS_UNSPECIFIED\";\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return \"PROPOSAL_STATUS_VOTING_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return \"PROPOSAL_STATUS_PASSED\";\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return \"PROPOSAL_STATUS_REJECTED\";\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return \"PROPOSAL_STATUS_FAILED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseTextProposal = { title: \"\", description: \"\" };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseDeposit = { proposalId: 0, depositor: \"\" };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyResult = {\n    yes: \"\",\n    abstain: \"\",\n    no: \"\",\n    noWithVeto: \"\",\n};\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== \"\") {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== \"\") {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== \"\") {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== \"\") {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n};\nconst baseVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseFungibleTokenPacketData = {\n    denom: \"\",\n    amount: 0,\n    sender: \"\",\n    receiver: \"\",\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n};\nconst baseDenomTrace = { path: \"\", baseDenom: \"\" };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== \"\") {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== \"\") {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined &&\n            (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedClientState, ClientConsensusStates, Params, } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0,\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseIdentifiedGenesisMetadata = { clientId: \"\" };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Counterparty, Version, } from \"../../../../ibc/core/connection/v1/connection\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\nconst baseMsgConnectionOpenInit = {\n    clientId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== \"\") {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    signer: \"\",\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== \"\") {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: \"\", signer: \"\" };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation, } from \"../../../cosmos/staking/v1beta1/staking\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n};\nconst baseLastValidatorPower = { address: \"\", power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from \"../../../../confio/proofs\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.core.commitment.v1\";\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePath = { keyPath: \"\" };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ics23\";\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_HASH\":\n            return HashOp.NO_HASH;\n        case 1:\n        case \"SHA256\":\n            return HashOp.SHA256;\n        case 2:\n        case \"SHA512\":\n            return HashOp.SHA512;\n        case 3:\n        case \"KECCAK\":\n            return HashOp.KECCAK;\n        case 4:\n        case \"RIPEMD160\":\n            return HashOp.RIPEMD160;\n        case 5:\n        case \"BITCOIN\":\n            return HashOp.BITCOIN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return \"NO_HASH\";\n        case HashOp.SHA256:\n            return \"SHA256\";\n        case HashOp.SHA512:\n            return \"SHA512\";\n        case HashOp.KECCAK:\n            return \"KECCAK\";\n        case HashOp.RIPEMD160:\n            return \"RIPEMD160\";\n        case HashOp.BITCOIN:\n            return \"BITCOIN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_PREFIX\":\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case \"VAR_PROTO\":\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case \"VAR_RLP\":\n            return LengthOp.VAR_RLP;\n        case 3:\n        case \"FIXED32_BIG\":\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case \"FIXED32_LITTLE\":\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case \"FIXED64_BIG\":\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case \"FIXED64_LITTLE\":\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case \"REQUIRE_32_BYTES\":\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case \"REQUIRE_64_BYTES\":\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return \"NO_PREFIX\";\n        case LengthOp.VAR_PROTO:\n            return \"VAR_PROTO\";\n        case LengthOp.VAR_RLP:\n            return \"VAR_RLP\";\n        case LengthOp.FIXED32_BIG:\n            return \"FIXED32_BIG\";\n        case LengthOp.FIXED32_LITTLE:\n            return \"FIXED32_LITTLE\";\n        case LengthOp.FIXED64_BIG:\n            return \"FIXED64_BIG\";\n        case LengthOp.FIXED64_LITTLE:\n            return \"FIXED64_LITTLE\";\n        case LengthOp.REQUIRE_32_BYTES:\n            return \"REQUIRE_32_BYTES\";\n        case LengthOp.REQUIRE_64_BYTES:\n            return \"REQUIRE_64_BYTES\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch\n                ? BatchProof.toJSON(message.batch)\n                : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0,\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0,\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Event } from \"../../../../tendermint/abci/types\";\nexport const protobufPackage = \"cosmos.base.abci.v1beta1\";\nconst baseTxResponse = {\n    height: 0,\n    txhash: \"\",\n    codespace: \"\",\n    code: 0,\n    data: \"\",\n    rawLog: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: \"\",\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== \"\") {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== \"\") {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== \"\") {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== \"\") {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== \"\") {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: \"\" };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseStringEvent = { type: \"\" };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseAttribute = { key: \"\", value: \"\" };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n};\nconst baseResult = { log: \"\" };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgData = { msgType: \"\" };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== \"\") {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0,\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../../cosmos/base/v1beta1/coin\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseMsgTransfer = {\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    sender: \"\",\n    receiver: \"\",\n    timeoutTimestamp: 0,\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== \"\") {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Msg\", \"Transfer\", data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON, } from \"../../../cosmos/gov/v1beta1/gov\";\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\nconst baseMsgSubmitProposal = { proposer: \"\" };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: \"\" };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"SubmitProposal\", data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Vote\", data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Deposit\", data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n"],"sourceRoot":""}